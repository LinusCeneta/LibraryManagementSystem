<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <display-name>Library Management System</display-name>

    <!-- Welcome File List -->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <!-- Servlet Definitions -->

    <!-- Acquisition Servlet -->
    <servlet>
        <servlet-name>AcquisitionServlet</servlet-name>
        <servlet-class>com.librarysystem.servlet.AcquisitionServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>AcquisitionServlet</servlet-name>
        <url-pattern>/acquisition/*</url-pattern>
    </servlet-mapping>

    <!-- Inventory Servlet -->
    <servlet>
        <servlet-name>InventoryServlet</servlet-name>
        <servlet-class>com.librarysystem.servlet.InventoryServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>InventoryServlet</servlet-name>
        <url-pattern>/inventory/*</url-pattern>
    </servlet-mapping>

    <!-- Placeholder for UserServlet (if you have one for login/logout, etc.) -->
    <!--
    <servlet>
        <servlet-name>UserServlet</servlet-name>
        <servlet-class>com.librarysystem.servlet.UserServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>UserServlet</servlet-name>
        <url-pattern>/user/*</url-pattern>
    </servlet-mapping>
    -->

    <!-- Session Configuration -->
    <session-config>
        <session-timeout>30</session-timeout> <!-- 30 minutes -->
        <cookie-config>
            <http-only>true</http-only>
            <!-- <secure>true</secure> Uncomment if deployed over HTTPS -->
        </cookie-config>
        <tracking-mode>COOKIE</tracking-mode>
    </session-config>

    <!-- JDBC DataSource Configuration (Tomcat specific, defined in context.xml) -->
    <!--
    It's common to define the DataSource in META-INF/context.xml or server's context.xml.
    If you haven't, here's an example of how it might look in context.xml:
    <Context>
        <Resource name="jdbc/LibraryDB"
                  auth="Container"
                  type="javax.sql.DataSource"
                  driverClassName="org.apache.derby.jdbc.EmbeddedDriver"
                  url="jdbc:derby:libraryDB;create=true"
                  maxTotal="20"
                  maxIdle="10"
                  maxWaitMillis="5000"
                  username=""
                  password="" />
    </Context>
    The DBConnectionUtil.java class is already set up to look for "java:comp/env/jdbc/LibraryDB".
    Ensure your Derby JARs (derby.jar, derbynet.jar if network server, derbyclient.jar if client)
    are in WEB-INF/lib.
    -->


    <!-- Security Constraints (Placeholder - to be refined with actual roles) -->
    <!-- This is a basic example. You'd typically have more granular control. -->

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Acquisition Module</web-resource-name>
            <url-pattern>/acquisition/*</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>ROLE_STAFF</role-name>
            <role-name>ROLE_ADMIN</role-name>
            <%-- Add other roles that need access --%>
        </auth-constraint>
    </security-constraint>

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Inventory Module</web-resource-name>
            <url-pattern>/inventory/*</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>ROLE_STAFF</role-name>
            <role-name>ROLE_ADMIN</role-name>
        </auth-constraint>
    </security-constraint>

    <!-- Define security roles used in constraints (actual role definition happens in Tomcat or your auth mechanism) -->
    <security-role>
        <role-name>ROLE_STAFF</role-name>
    </security-role>
    <security-role>
        <role-name>ROLE_ADMIN</role-name>
    </security-role>
    <security-role>
        <role-name>ROLE_MEMBER</role-name> <%-- Example, if members have some restricted access --%>
    </security-role>

    <!-- Login Configuration (if using FORM based authentication) -->
    <!--
    <login-config>
        <auth-method>FORM</auth-method>
        <realm-name>LibraryRealm</realm-name>
        <form-login-config>
            <form-login-page>/login.jsp</form-login-page>
            <form-error-page>/loginError.jsp</form-error-page>
        </form-login-config>
    </login-config>
    -->

    <!-- Error Pages -->
    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/jsp/error/404.jsp</location> <!-- Create this JSP -->
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/WEB-INF/jsp/error/500.jsp</location> <!-- Create this JSP -->
    </error-page>
    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/WEB-INF/jsp/error/exception.jsp</location> <!-- Create this JSP -->
    </error-page>

</web-app>
